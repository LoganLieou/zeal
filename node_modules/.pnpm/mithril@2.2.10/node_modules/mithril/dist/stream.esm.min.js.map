{"version":3,"file":"stream.esm.min.js","sources":["../src/entry/stream.esm.js"],"sourcesContent":["var STATE_PENDING = 1\nvar STATE_ACTIVE = 2\nvar STATE_CHANGING = 3\nvar STATE_ENDED = 4\n\nvar streamSet = (stream, value) => {\n\tif (value !== SKIP) {\n\t\tstream._v = value\n\t\tif (stream._s !== STATE_ENDED) {\n\t\t\tstreamChanging(stream)\n\t\t\tstream._s = STATE_ACTIVE\n\t\t\t// Cloning the list to ensure it's still iterated in intended\n\t\t\t// order\n\t\t\tvar streams = stream._d.slice()\n\t\t\tvar fns = stream._f.slice()\n\t\t\tfor (var i = 0; i < streams.length; i++) {\n\t\t\t\tif (streams[i]._s !== STATE_ENDED) {\n\t\t\t\t\tstreamSet(streams[i], fns[i](stream._v))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn stream._v\n}\n\nvar streamChanging = (stream) => {\n\tif (stream._s !== STATE_ENDED) stream._s = STATE_CHANGING\n\tfor (var s of stream._d) streamChanging(s)\n}\n\nvar streamMap = (stream, fn, ignoreInitial) => {\n\tvar target = ignoreInitial ? Stream() : Stream(fn(stream._v))\n\ttarget._p.push(stream)\n\tstream._d.push(target)\n\tstream._f.push(fn)\n\treturn target\n}\n\nvar Stream = (...args) => {\n\tvar stream = (...args) => streamSet(stream, args.length ? args[0] : SKIP)\n\n\tObject.setPrototypeOf(stream, Stream.prototype)\n\n\tstream._s = args.length && args[0] !== SKIP ? STATE_ACTIVE : STATE_PENDING\n\tstream._v = args.length ? args[0] : undefined\n\tstream._d = []\n\tstream._f = []\n\tstream._p = []\n\tstream._e = null\n\n\treturn stream\n}\n\nStream[\"fantasy-land/of\"] = Stream\n\nStream.prototype = Object.create(Function.prototype, Object.getOwnPropertyDescriptors({\n\tconstructor: Stream,\n\tmap(fn) { return streamMap(this, fn, this._s !== STATE_ACTIVE) },\n\t\"fantasy-land/ap\"(x) { return combine(() => (0, x._v)(this._v), [x, this]) },\n\ttoJSON() {\n\t\tvar value = this._v\n\t\treturn (value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value)\n\t},\n\tget end() {\n\t\tif (!this._e) {\n\t\t\tthis._e = Stream()\n\t\t\tstreamMap(this._e, (value) => {\n\t\t\t\tif (value === true) {\n\t\t\t\t\tfor (var p of this._p) {\n\t\t\t\t\t\tvar childIndex = p._d.indexOf(this)\n\t\t\t\t\t\tif (childIndex >= 0) {\n\t\t\t\t\t\t\tp._d.splice(childIndex, 1)\n\t\t\t\t\t\t\tp._f.splice(childIndex, 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._s = STATE_ENDED\n\t\t\t\t\tthis._p.length = this._d.length = this._f.length = 0\n\t\t\t\t}\n\t\t\t\treturn value\n\t\t\t}, true)\n\t\t}\n\t\treturn this._e\n\t},\n}))\n\nStream.prototype[\"fantasy-land/map\"] = Stream.prototype.map\n\nvar SKIP = Stream.SKIP = {}\n\nvar combine = Stream.combine = (fn, streams) => {\n\tif (streams.some((s) => s.constructor !== Stream)) {\n\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream.\")\n\t}\n\tvar ready = streams.every((s) => s._s === STATE_ACTIVE)\n\tvar stream = ready ? Stream(fn(streams)) : Stream()\n\n\tvar changed = []\n\n\tvar mappers = streams.map((s) => streamMap(s, (value) => {\n\t\tchanged.push(s)\n\t\tif (ready || streams.every((s) => s._s !== STATE_PENDING)) {\n\t\t\tready = true\n\t\t\tstreamSet(stream, fn(changed))\n\t\t\tchanged = []\n\t\t}\n\t\treturn value\n\t}, true))\n\n\tvar endStream = stream.end.map((value) => {\n\t\tif (value === true) {\n\t\t\tfor (var mapper of mappers) mapper.end(true)\n\t\t\tendStream.end(true)\n\t\t}\n\t\treturn undefined\n\t})\n\n\treturn stream\n}\n\nStream.merge = (streams) => combine(() => streams.map((s) => s._v), streams)\n\nStream.scan = (fn, acc, origin) => {\n\tvar stream = streamMap(origin, (v) => {\n\t\tvar next = fn(acc, v)\n\t\tif (next !== SKIP) acc = next\n\t\treturn next\n\t}, origin._s !== STATE_ACTIVE)\n\tstreamSet(stream, acc)\n\treturn stream\n}\n\nStream.scanMerge = (tuples, seed) => {\n\tvar streams = tuples.map((tuple) => tuple[0])\n\n\tvar stream = combine((changed) => {\n\t\tfor (var i = 0; i < streams.length; i++) {\n\t\t\tif (changed.includes(streams[i])) {\n\t\t\t\tseed = tuples[i][1](seed, streams[i]._v)\n\t\t\t}\n\t\t}\n\t\treturn seed\n\t}, streams)\n\n\tstreamSet(stream, seed)\n\n\treturn stream\n}\n\nStream.lift = (fn, ...streams) => combine(() => fn(...streams.map((s) => s._v)), streams)\n\nexport {Stream as default}\n"],"names":["streamSet","stream","value","SKIP","_v","_s","streamChanging","streams","_d","slice","fns","_f","i","length","s","streamMap","fn","ignoreInitial","target","Stream","_p","push","args","Object","setPrototypeOf","prototype","undefined","_e","create","Function","getOwnPropertyDescriptors","constructor","map","this","x","combine","toJSON","end","p","childIndex","indexOf","splice","some","Error","ready","every","changed","mappers","endStream","mapper","merge","scan","acc","origin","v","next","scanMerge","tuples","seed","tuple","includes","lift"],"mappings":"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"}